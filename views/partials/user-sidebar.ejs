<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        .profile-container {
            display: flex;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 280px;
            background-color: #fff;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px 0;
            position: fixed;
            height: calc(100vh - 60px);
            top: 60px;
            left: 0;
            overflow-y: auto;
            z-index: 1000;
        }

        .profile-section {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid #eee;
            margin-bottom: 20px;
        }

        .profile-avatar-container {
            position: relative;
            width: 60px;
            height: 60px;
            margin: 0 auto 10px;
            cursor: pointer;
        }

        .profile-avatar {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, #111827 0%, #374151 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: white;
            font-weight: 700;
            box-shadow: 0 4px 15px rgba(17, 24, 39, 0.3);
        }

        .profile-avatar-img {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            object-fit: cover;
            box-shadow: 0 4px 15px rgba(17, 24, 39, 0.3);
        }

        .profile-avatar-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            color: white;
            font-size: 18px;
        }

        .profile-avatar-container:hover .profile-avatar-overlay {
            opacity: 1;
        }

        .profile-photo-upload {
            display: none;
        }

        .profile-name {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .profile-email {
            font-size: 14px;
            color: #666;
        }

        .menu-section h3 {
            padding: 0 20px 10px;
            font-size: 16px;
            font-weight: 600;
            color: #333;
            text-align: center;
        }

        .menu-item {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: #666;
            text-decoration: none;
            transition: background-color 0.2s;
            cursor: pointer;
        }

        .menu-item:hover {
            background-color: #f8f9fa;
            color: #333;
        }

        .menu-item.active {
            background: linear-gradient(135deg, #111827 0%, #374151 100%);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        .menu-item::before {
            content: '';
            width: 20px;
            height: 20px;
            margin-right: 12px;
            background-size: contain;
            opacity: 0.7;
        }

        /* Burger Button Styles */
        .burger-btn {
            display: none;
            position: fixed;
            top: 120px;
            right: 20px;
            z-index: 1001;
            background: linear-gradient(135deg, #111827 0%, #374151 100%);
            border: none;
            border-radius: 6px;
            padding: 8px;
            color: white;
            font-size: 14px;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(17, 24, 39, 0.3);
            transition: all 0.3s ease;
            width: 36px;
            height: 36px;
            align-items: center;
            justify-content: center;
        }

        .burger-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(17, 24, 39, 0.4);
        }

        /* Modal Overlay */
        .sidebar-modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1002;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .sidebar-modal-overlay.show {
            display: block;
            opacity: 1;
        }

        /* Modal Sidebar */
        .sidebar-modal {
            position: fixed;
            top: 0;
            left: -280px;
            width: 280px;
            height: 100vh;
            background-color: #fff;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            z-index: 1003;
            transition: left 0.3s ease;
            overflow-y: auto;
        }

        .sidebar-modal.show {
            left: 0;
        }

        .sidebar-modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            border-bottom: 1px solid #eee;
            background: linear-gradient(135deg, #111827 0%, #374151 100%);
            color: white;
        }

        .sidebar-modal-title {
            font-size: 18px;
            font-weight: 600;
            margin: 0;
        }

        .close-modal-btn {
            background: none;
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }

        .close-modal-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        /* Desktop and larger screens - ensure burger button is hidden */
        @media (min-width: 769px) {
            .burger-btn {
                display: none !important;
            }
        }

        /* Mobile screens */
        @media (max-width: 768px) {
            .profile-container {
                padding-top: 80px;
            }

            .sidebar {
                display: none;
            }

            .burger-btn {
                display: flex !important;
            }
        }
    </style>
</head>

<body>
    <!-- Burger Button for Mobile -->
    <button class="burger-btn" onclick="openSidebarModal()">
        <i class="bi bi-list"></i>
    </button>

    <!-- Modal Overlay -->
    <div class="sidebar-modal-overlay" onclick="closeSidebarModal()"></div>

    <!-- Modal Sidebar -->
    <div class="sidebar-modal">
        <div class="sidebar-modal-header">
            <h3 class="sidebar-modal-title">My Account</h3>
            <button class="close-modal-btn" onclick="closeSidebarModal()">
                <i class="bi bi-x"></i>
            </button>
        </div>
        <div class="profile-section">
            <div class="profile-avatar-container">
                <% if (user.profilePhoto) { %>
                    <img src="/uploads/profiles/<%= user.profilePhoto %>" alt="Profile Photo" class="profile-avatar-img" id="modalSidebarProfileImg">
                <% } else { %>
                    <div class="profile-avatar" id="modalSidebarProfileAvatar">
                        <%= user.fullName ? user.fullName.charAt(0).toUpperCase() : 'ðŸ‘¤' %>
                    </div>
                <% } %>
                <div class="profile-avatar-overlay" onclick="triggerPhotoUpload()">
                    <i class="bi bi-camera"></i>
                </div>
            </div>
            <div class="profile-name">
                <%= user.fullName || 'User' %>
            </div>
            <div class="profile-email">
                <%= user.email || 'No email' %>
            </div>
        </div>

        <div class="menu-section">
            <h3>Manage My Account</h3>
            <a href="/profile" class="menu-item" onclick="showSection('profile'); closeSidebarModal();">My Profile</a>
            <a href="/address" class="menu-item" onclick="showSection('address'); closeSidebarModal();">Address Book</a>
            <a href="/orders" class="menu-item" onclick="showSection('orders'); closeSidebarModal();">My Orders</a>
            <a href="/wishlist" class="menu-item" onclick="showSection('wishlist'); closeSidebarModal();">My Wishlist</a>
            <a href="/wallet" class="menu-item" onclick="showSection('wallet'); closeSidebarModal();">Wallet</a>
            <a href="/referrals" class="menu-item" onclick="showSection('referrals'); closeSidebarModal();">Referrals</a>
            <a href="/change-password" class="menu-item" onclick="showSection('password'); closeSidebarModal();">Change Password</a>
        </div>
    </div>

    <div class="profile-container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="profile-section">
                <div class="profile-avatar-container">
                    <% if (user.profilePhoto) { %>
                        <img src="/uploads/profiles/<%= user.profilePhoto %>" alt="Profile Photo" class="profile-avatar-img" id="sidebarProfileImg">
                    <% } else { %>
                        <div class="profile-avatar" id="sidebarProfileAvatar">
                            <%= user.fullName ? user.fullName.charAt(0).toUpperCase() : 'ðŸ‘¤' %>
                        </div>
                    <% } %>
                    <div class="profile-avatar-overlay" onclick="triggerPhotoUpload()">
                        <i class="bi bi-camera"></i>
                    </div>
                </div>
                <div class="profile-name">
                    <%= user.fullName || 'User' %>
                </div>
                <div class="profile-email">
                    <%= user.email || 'No email' %>
                </div>
            </div>

            <div class="menu-section">
                <h3>Manage My Account</h3>
                <a href="/profile" class="menu-item" onclick="showSection('profile')">My Profile</a>
                <a href="/address" class="menu-item" onclick="showSection('address')">Address Book</a>
                <a href="/orders" class="menu-item" onclick="showSection('orders')">My Orders</a>
                <a href="/wishlist" class="menu-item" onclick="showSection('wishlist')">My Wishlist</a>
                <a href="/wallet" class="menu-item" onclick="showSection('wallet')">Wallet</a>
                <a href="/referrals" class="menu-item" onclick="showSection('referrals')">Referrals</a>
                <a href="/change-password" class="menu-item" onclick="showSection('password')">Change Password</a>
            </div>
        </div>
    </div>

    <!-- Hidden file input for photo upload -->
    <input type="file" id="profilePhotoInput" class="profile-photo-upload" accept="image/*" onchange="uploadProfilePhoto()">

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script>
        function showSection(section) {
            // Remove active class from all menu items
            document.querySelectorAll('.menu-item').forEach(item => {
                item.classList.remove('active');
            });

            // Add active class to clicked item
            if (event && event.target) {
                event.target.classList.add('active');
            }
        }

        // Set active state based on current page
        document.addEventListener('DOMContentLoaded', function () {
            const currentPath = window.location.pathname;
            const menuItems = document.querySelectorAll('.menu-item');

            menuItems.forEach(item => {
                item.classList.remove('active');
                const href = item.getAttribute('href');

                if (currentPath === href ||
                    (currentPath.startsWith('/address') && href === '/address') ||
                    (currentPath === '/profile' && href === '/profile') ||
                    (currentPath.startsWith('/profile/edit') && href === '/profile') ||
                    (currentPath.startsWith('/profile/email-change-otp') && href === '/profile') ||
                    (currentPath.startsWith('/orders') && href === '/orders') ||
                    (currentPath.startsWith('/wishlist') && href === '/wishlist') ||
                    (currentPath.startsWith('/wallet') && href === '/wallet') ||
                    (currentPath.startsWith('/change-password') && href === '/change-password')) {
                    item.classList.add('active');
                }
            });
        });

        // Modal functions
        function openSidebarModal() {
            const overlay = document.querySelector('.sidebar-modal-overlay');
            const modal = document.querySelector('.sidebar-modal');

            overlay.classList.add('show');
            modal.classList.add('show');

            // Prevent body scroll when modal is open
            document.body.style.overflow = 'hidden';
        }

        function closeSidebarModal() {
            const overlay = document.querySelector('.sidebar-modal-overlay');
            const modal = document.querySelector('.sidebar-modal');

            overlay.classList.remove('show');
            modal.classList.remove('show');

            // Restore body scroll
            document.body.style.overflow = '';
        }

        // Close modal when clicking outside or pressing escape
        document.addEventListener('keydown', function (e) {
            if (e.key === 'Escape') {
                closeSidebarModal();
            }
        });

        // Profile photo upload functions
        function triggerPhotoUpload() {
            document.getElementById('profilePhotoInput').click();
        }

        async function uploadProfilePhoto() {
            const fileInput = document.getElementById('profilePhotoInput');
            const file = fileInput.files[0];

            if (!file) {
                return;
            }

            // Validate file type
            if (!file.type.startsWith('image/')) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid File',
                    text: 'Please select an image file.',
                    confirmButtonColor: '#111827'
                });
                return;
            }

            // Validate file size (5MB)
            if (file.size > 5 * 1024 * 1024) {
                Swal.fire({
                    icon: 'error',
                    title: 'File Too Large',
                    text: 'Please select an image smaller than 5MB.',
                    confirmButtonColor: '#111827'
                });
                return;
            }

            // Show loading
            Swal.fire({
                title: 'Uploading Photo...',
                text: 'Please wait while we upload your profile photo.',
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            try {
                const formData = new FormData();
                formData.append('profilePhoto', file);

                const response = await fetch('/profile/photo', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    const newImagePath = `/uploads/profiles/${result.filename}`;

                    // Update ALL sidebar containers (desktop + mobile)
                    const sidebarContainers = document.querySelectorAll('.profile-avatar-container');
                    sidebarContainers.forEach(container => {
                        container.innerHTML = `
                            <img src="${newImagePath}" alt="Profile Photo" class="profile-avatar-img" id="sidebarProfileImg">
                            <div class="profile-avatar-overlay" onclick="triggerPhotoUpload()">
                                <i class="bi bi-camera"></i>
                            </div>
                        `;
                    });

                    // Update main profile photo if present
                    const mainPhotoContainer = document.querySelector('.profile-photo-container');
                    if (mainPhotoContainer) {
                        mainPhotoContainer.innerHTML = `
                            <img src="${newImagePath}" alt="Profile Photo" class="main-profile-img">
                            <div class="profile-photo-overlay" onclick="triggerMainPhotoUpload()">
                                <i class="fas fa-camera"></i>
                            </div>
                        `;
                    }

                    Swal.fire({
                        icon: 'success',
                        title: 'Photo Updated!',
                        text: result.message,
                        confirmButtonColor: '#111827'
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Upload Failed',
                        text: result.message,
                        confirmButtonColor: '#111827'
                    });
                }
            } catch (error) {
                console.error('Error uploading photo:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Upload Error',
                    text: 'Something went wrong. Please try again.',
                    confirmButtonColor: '#111827'
                });
            }

            // Clear the file input
            fileInput.value = '';
        }
    </script>
</body>

</html>
