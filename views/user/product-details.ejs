<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Details -miniTorque </title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="icon" type="image/png" href="/images/miniTorque.png.png" />
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" defer></script>
</head>
<body>

<%- include("../partials/head") %>

<!-- Breadcrumb -->
<section class="py-3 bg-light">
  <div class="container">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item"><a href="/" class="text-decoration-none text-muted">Home</a></li>
        <li class="breadcrumb-item"><a href="/shopPage" class="text-decoration-none text-muted">Shop</a></li>
        <li class="breadcrumb-item"><a href="/shopPage?category=<%= product.category._id %>" class="text-decoration-none text-muted"><%= product.category.name %></a></li>
        <li class="breadcrumb-item active" aria-current="page"><%= product.productName %></li>
      </ol>
    </nav>
  </div>
</section>

<!-- Product Details -->
<section class="py-5 bg-white">
  <div class="container">
    <div class="row g-5">
      <!-- Product Images -->
      <div class="col-lg-5">
        <div class="row">
          <!-- Thumbnails - Vertical on left side -->
          <div class="col-2">
            <div class="d-flex flex-column thumbnails-container">
              <img src="/uploads/products/<%= product.mainImage %>" alt="<%= product.productName %> - Main" class="thumbnail active" onclick="changeImage(this, '/uploads/products/<%= product.mainImage %>')" onerror="this.src='/assets/placeholder.jpg'" />
              <% if (product.subImages && product.subImages.length > 0) { %>
                <% product.subImages.forEach((subImage, index) => { %>
                  <img src="/uploads/products/<%= subImage %>" alt="<%= product.productName %> - Image <%= index + 1 %>" class="thumbnail" onclick="changeImage(this, '/uploads/products/<%= subImage %>')" onerror="this.src='/assets/placeholder.jpg'" />
                <% }) %>
              <% } %>
            </div>
          </div>

          <!-- Main Image -->
          <div class="col-10">
            <div class="mb-3 zoom-container" id="zoomContainer">
              <% if (product.productOffer && product.productOffer > 0) { %>
                <span class="offer-badge"><%= product.productOffer %>% OFF</span>
              <% } %>
              <img src="/uploads/products/<%= product.mainImage %>" alt="<%= product.productName %>" class="main-image" id="mainImage" onerror="this.src='/assets/placeholder.jpg'" />
            </div>
          </div>
        </div>
      </div>

      <!-- Product Info -->
      <div class="col-lg-7">
        <div class="product-details">
          <h1 class="fs-2 fw-bold mb-1"><%= product.productName %></h1>
          <p class="fs-5 mb-3 text-muted">by <span class="fw-semibold text-dark"><%= product.brand %></span></p>

          <!-- Product Rating (Dummy) -->
          <div class="rating-section mb-3">
            <div class="d-flex align-items-center gap-2">
              <div class="stars">
                <i class="fas fa-star text-warning"></i>
                <i class="fas fa-star text-warning"></i>
                <i class="fas fa-star text-warning"></i>
                <i class="fas fa-star text-warning"></i>
                <i class="far fa-star text-warning"></i>
              </div>
              <span class="rating-text">4.2 (127 reviews)</span>
            </div>
          </div>

          <!-- Product Meta -->
          <div class="product-meta mb-4">
            <div class="product-meta-item">
              <i class="fas fa-car product-meta-icon"></i>
              <span>Brand: <%= product.brand %></span>
            </div>
            <div class="product-meta-item">
              <i class="fas fa-layer-group product-meta-icon"></i>
              <span>Category: <%= product.category.name %></span>
            </div>
            <div class="product-meta-item">
              <i class="fas fa-boxes product-meta-icon"></i>
              <span>Status: <%= product.status %></span>
            </div>
            <div class="product-meta-item">
              <i class="fas fa-calendar-alt product-meta-icon"></i>
              <span>Added: <%= new Date(product.createdAt).toLocaleDateString() %></span>
            </div>
          </div>

          <!-- Price Section -->
          <div class="price-section mb-4">
            <% if (product.productOffer && product.productOffer > 0) { %>
              <% const finalPrice = (product.salePrice * (1 - product.productOffer / 100)).toFixed(2) %>
              <div class="d-flex align-items-baseline gap-2">
                <h2 class="fs-3 fw-bold mb-0 text-danger">₹<%= finalPrice %></h2>
                <span class="fs-5 text-decoration-line-through text-muted">₹<%= product.salePrice.toFixed(2) %></span>
                <span class="badge bg-danger">-<%= product.productOffer %>% OFF</span>
              </div>
              <div class="savings-info mt-2">
                <span class="text-success d-flex align-items-center gap-1">
                  <i class="fas fa-tag"></i>
                  You save: ₹<%= (product.salePrice - finalPrice).toFixed(2) %>
                </span>
              </div>
            <% } else { %>
              <h2 class="fs-3 fw-bold mb-0 text-danger">₹<%= product.salePrice.toFixed(2) %></h2>
            <% } %>
          </div>

          <!-- Stock Status -->
          <div class="mb-3">
            <% if (product.quantity > 10) { %>
              <span class="stock-status in-stock">
                <i class="fas fa-check-circle me-1"></i> In Stock (<%= product.quantity %> units available)
              </span>
            <% } else if (product.quantity > 0) { %>
              <span class="stock-status low-stock">
                <i class="fas fa-exclamation-triangle me-1"></i> Low Stock (<%= product.quantity %> units left)
              </span>
            <% } else { %>
              <span class="stock-status out-of-stock">
                <i class="fas fa-times-circle me-1"></i> Out of Stock
              </span>
            <% } %>
          </div>

          <!-- Product Description -->
          <p class="text-muted mb-4">
            <%= product.description %>
          </p>

          <!-- Action Controls -->
          <div class="d-flex flex-column gap-4">
            <div>
              <label class="form-label fw-medium mb-2">Quantity</label>
              <div class="quantity-selector">
                <button class="quantity-btn" onclick="decrementQuantity()">
                  <i class="fas fa-minus"></i>
                </button>
                <input type="number" class="quantity-input" id="quantity" value="1" min="1" max="<%= Math.min(5, product.quantity) %>" />
                <button class="quantity-btn" onclick="incrementQuantity()">
                  <i class="fas fa-plus"></i>
                </button>
              </div>
            </div>

            <div class="action-buttons">
              <button class="btn btn-dark btn-add-to-cart py-3"
                      data-product-id="<%= product._id %>"
                      <%= product.quantity === 0 ? 'disabled' : '' %>>
                <i class="fas fa-shopping-cart"></i>
                <span>Add to Cart</span>
              </button>
              
              <!-- 🔥 UPDATED: Wishlist button with correct state -->
              <% 
                const isInWishlist = userWishlistIds && userWishlistIds.includes(product._id.toString());
              %>
              <button class="btn-wishlist <%= isInWishlist ? 'active' : '' %>" 
                      data-product-id="<%= product._id %>"
                      title="<%= isInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist' %>">
                <i class="<%= isInWishlist ? 'fas fa-heart' : 'far fa-heart' %>"></i>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Product Tabs -->
    <div class="product-tabs mt-5">
      <ul class="nav nav-tabs" id="productTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab" aria-controls="description" aria-selected="true">Description</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="specifications-tab" data-bs-toggle="tab" data-bs-target="#specifications" type="button" role="tab" aria-controls="specifications" aria-selected="false">Specifications</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="false">Reviews</button>
        </li>
      </ul>
      <div class="tab-content" id="productTabsContent">
        <!-- Description Tab -->
        <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
          <div class="row mt-4">
            <div class="col-lg-12">
              <h3 class="fs-4 fw-bold mb-4">Product Description</h3>
              <p class="mb-4"><%= product.description %></p>
              <% if (product.features) { %>
                <h4 class="fs-5 fw-semibold mb-3">Key Features</h4>
                <p class="text-muted"><%= product.features %></p>
              <% } %>
            </div>
          </div>
        </div>

        <!-- Specifications Tab -->
        <div class="tab-pane fade" id="specifications" role="tabpanel" aria-labelledby="specifications-tab">
          <div class="mt-4">
            <h3 class="fs-4 fw-bold mb-4">Product Specifications</h3>
            <div class="product-specs">
              <div class="product-spec">
                <span class="product-spec-label">Product Name</span>
                <span class="product-spec-value"><%= product.productName %></span>
              </div>
              <div class="product-spec">
                <span class="product-spec-label">Brand</span>
                <span class="product-spec-value"><%= product.brand %></span>
              </div>
              <div class="product-spec">
                <span class="product-spec-label">Category</span>
                <span class="product-spec-value"><%= product.category.name %></span>
              </div>
              <div class="product-spec">
                <span class="product-spec-label">Regular Price</span>
                <span class="product-spec-value">₹<%= product.regularPrice.toFixed(2) %></span>
              </div>
              <div class="product-spec">
                <span class="product-spec-label">Sale Price</span>
                <span class="product-spec-value">₹<%= product.salePrice.toFixed(2) %></span>
              </div>
              <div class="product-spec">
                <span class="product-spec-label">Stock Quantity</span>
                <span class="product-spec-value"><%= product.quantity %> units</span>
              </div>
              <div class="product-spec">
                <span class="product-spec-label">Status</span>
                <span class="product-spec-value"><%= product.status %></span>
              </div>
              <div class="product-spec">
                <span class="product-spec-label">Added Date</span>
                <span class="product-spec-value"><%= new Date(product.createdAt).toLocaleDateString() %></span>
              </div>
              <% if (product.features) { %>
                <div class="product-spec">
                  <span class="product-spec-label">Features</span>
                  <span class="product-spec-value"><%= product.features %></span>
                </div>
              <% } %>
            </div>
          </div>
        </div>

        <!-- Reviews Tab -->
        <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
          <div class="row mt-4">
            <div class="col-lg-12">
              <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="fs-4 fw-bold mb-0">Customer Reviews</h3>
                <button class="btn btn-outline-dark">Write a Review</button>
              </div>
              
              <!-- Dummy Reviews -->
              <div class="reviews-container">
                <!-- Review 1 -->
                <div class="review-card mb-4">
                  <div class="d-flex align-items-start gap-3">
                    <div class="user-avatar">
                      <span>J</span>
                    </div>
                    <div class="review-content">
                      <div class="d-flex align-items-center gap-2 mb-2">
                        <h5 class="fw-semibold mb-0">John Smith</h5>
                        <div class="stars">
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                        </div>
                        <span class="text-muted small">5 days ago</span>
                      </div>
                      <p class="text-muted mb-0">Amazing diecast model! Great attention to detail and perfect finishing. Highly recommended for collectors.</p>
                    </div>
                  </div>
                </div>

                <!-- Review 2 -->
                <div class="review-card mb-4">
                  <div class="d-flex align-items-start gap-3">
                    <div class="user-avatar">
                      <span>S</span>
                    </div>
                    <div class="review-content">
                      <div class="d-flex align-items-center gap-2 mb-2">
                        <h5 class="fw-semibold mb-0">Sarah Johnson</h5>
                        <div class="stars">
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="far fa-star text-warning"></i>
                        </div>
                        <span class="text-muted small">1 week ago</span>
                      </div>
                      <p class="text-muted mb-0">Good quality product, fast shipping. The packaging was excellent and the model arrived in perfect condition.</p>
                    </div>
                  </div>
                </div>

                <!-- Review 3 -->
                <div class="review-card mb-4">
                  <div class="d-flex align-items-start gap-3">
                    <div class="user-avatar">
                      <span>M</span>
                    </div>
                    <div class="review-content">
                      <div class="d-flex align-items-center gap-2 mb-2">
                        <h5 class="fw-semibold mb-0">Mike Rodriguez</h5>
                        <div class="stars">
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="fas fa-star text-warning"></i>
                          <i class="far fa-star text-warning"></i>
                        </div>
                        <span class="text-muted small">2 weeks ago</span>
                      </div>
                      <p class="text-muted mb-0">Impressive detail for the price point. Perfect addition to my collection. Will definitely order more from this seller.</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- ✅ CORRECTED: Related Products Section -->
    <div class="related-products mt-5">
      <h3 class="fs-3 fw-bold mb-4">You May Also Like</h3>
      <div class="row g-4">
        <% if (relatedProducts && relatedProducts.length > 0) { %>
          <% relatedProducts.forEach(relatedProduct => { %>
            <div class="col-sm-6 col-md-4 col-lg-3">
              <div class="product-card bg-white h-100 related-product">
                <div class="product-image-container">
                  <% if (relatedProduct.productOffer && relatedProduct.productOffer > 0) { %>
                    <span class="offer-badge"><%= relatedProduct.productOffer %>% OFF</span>
                  <% } %>
                  <%
                    const now = new Date();
                    const createdAt = new Date(relatedProduct.createdAt);
                    const diffDays = (now - createdAt) / (1000 * 60 * 60 * 24);
                    const isNew = diffDays <= 30;
                  %>
                  <% if (isNew) { %>
                    <span class="product-tag">New</span>
                  <% } %>
                  <a href="/product/<%= relatedProduct._id %>" class="text-decoration-none">
                    <img src="/uploads/products/<%= relatedProduct.mainImage %>" alt="<%= relatedProduct.productName %>" class="product-image" onerror="this.src='/assets/placeholder.jpg'" />
                  </a>
                </div>
                <div class="p-3">
                  <h3 class="fs-5 fw-semibold mb-1">
                    <a href="/product/<%= relatedProduct._id %>" class="text-dark text-decoration-none"><%= relatedProduct.productName %></a>
                  </h3>
                  <p class="text-muted small mb-2"><%= relatedProduct.brand %></p>
                  <div class="d-flex justify-content-between align-items-center">
                    <div>
                      <% if (relatedProduct.productOffer && relatedProduct.productOffer > 0) { %>
                        <% const relatedFinalPrice = (relatedProduct.salePrice * (1 - relatedProduct.productOffer / 100)).toFixed(2) %>
                        <div class="d-flex align-items-center gap-2">
                          <span class="fw-bold text-danger">₹<%= relatedFinalPrice %></span>
                          <span class="text-decoration-line-through text-muted small">₹<%= relatedProduct.salePrice.toFixed(2) %></span>
                        </div>
                      <% } else { %>
                        <span class="fw-bold">₹<%= relatedProduct.salePrice.toFixed(2) %></span>
                      <% } %>
                    </div>
                    <div class="d-flex gap-2 align-items-center">
                      <% 
                        const isRelatedInWishlist = userWishlistIds && userWishlistIds.includes(relatedProduct._id.toString());
                      %>
                      <button class="btn-wishlist-home <%= isRelatedInWishlist ? 'active' : '' %>" 
                              data-product-id="<%= relatedProduct._id %>"
                              title="<%= isRelatedInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist' %>">
                        <i class="<%= isRelatedInWishlist ? 'fas fa-heart' : 'far fa-heart' %>"></i>
                      </button>
                      <button class="add-to-cart" data-product-id="<%= relatedProduct._id %>" <%= relatedProduct.quantity === 0 ? 'disabled' : '' %>>
                        <i class="fas fa-plus"></i>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="col-12 text-center">
            <p class="text-muted">No related products available.</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</section>

<style>
/* Product Details Styles */
.zoom-container {
  position: relative;
  cursor: crosshair;
  overflow: hidden;
}

/* Image Magnifier Glass */
.img-magnifier-glass {
  position: absolute;
  border: 3px solid #000;
  border-radius: 50%;
  cursor: none;
  width: 100px;
  height: 100px;
  background-repeat: no-repeat;
  background-color: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(2px);
  display: none;
  z-index: 10;
  pointer-events: none;
}

/* Zoom Result Container */
.img-zoom-result {
  position: absolute;
  top: 0;
  right: -320px;
  width: 300px;
  height: 300px;
  border: 1px solid #d4d4d4;
  background-color: #fff;
  background-repeat: no-repeat;
  display: none;
  z-index: 20;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .img-zoom-result {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    right: auto;
    width: 250px;
    height: 250px;
    z-index: 1000;
  }

  .img-magnifier-glass {
    width: 80px;
    height: 80px;
  }
}

.main-image {
  width: 100%;
  height: 400px;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.thumbnails-container {
  gap: 10px;
  max-height: 400px;
  overflow-y: auto;
}

.thumbnail {
  width: 60px;
  height: 60px;
  object-fit: cover;
  border-radius: 4px;
  cursor: pointer;
  opacity: 0.7;
  transition: all 0.3s ease;
  border: 2px solid transparent;
}

.thumbnail:hover, .thumbnail.active {
  opacity: 1;
  border-color: #dc3545;
}

.offer-badge {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: #e53935;
  color: white;
  padding: 0.25rem 0.75rem;
  font-size: 0.875rem;
  font-weight: 600;
  border-radius: 2px;
  z-index: 2;
}

.product-tag {
  position: absolute;
  top: 10px;
  left: 10px;
  background-color: #28a745;
  color: white;
  padding: 0.25rem 0.75rem;
  font-size: 0.75rem;
  font-weight: 600;
  border-radius: 2px;
  z-index: 2;
}

.product-meta {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.product-meta-item {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 0.9rem;
  color: #6c757d;
}

.product-meta-icon {
  color: #dc3545;
  width: 16px;
}

.rating-section .stars {
  font-size: 1.1rem;
}

.rating-text {
  color: #6c757d;
  font-size: 0.9rem;
}

.stock-status {
  font-weight: 500;
  padding: 8px 12px;
  border-radius: 4px;
  display: inline-flex;
  align-items: center;
}

.stock-status.in-stock {
  background-color: #d4edda;
  color: #155724;
}

.stock-status.low-stock {
  background-color: #fff3cd;
  color: #856404;
}

.stock-status.out-of-stock {
  background-color: #f8d7da;
  color: #721c24;
}

.quantity-selector {
  display: flex;
  align-items: center;
  border: 1px solid #ddd;
  border-radius: 4px;
  width: fit-content;
}

.quantity-btn {
  background: none;
  border: none;
  padding: 10px 12px;
  cursor: pointer;
  color: #6c757d;
  transition: all 0.2s ease;
}

.quantity-btn:hover {
  background-color: #f8f9fa;
  color: #000;
}

.quantity-input {
  border: none;
  outline: none;
  width: 60px;
  text-align: center;
  padding: 10px 5px;
}

.action-buttons {
  display: flex;
  gap: 10px;
  align-items: center;
}

.btn-add-to-cart {
  flex: 1;
  max-width: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  font-weight: 500;
}

.btn-wishlist {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #fff;
  border: 2px solid #ddd;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.2rem;
  color: #dc3545;
  cursor: pointer;
  transition: all 0.3s ease;
}

.btn-wishlist:hover {
  background-color: #dc3545;
  color: #fff;
  border-color: #dc3545;
}

.btn-wishlist.active {
  background-color: #dc3545;
  color: #fff;
  border-color: #dc3545;
}

.social-icon {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: #f8f9fa;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #6c757d;
  text-decoration: none;
  transition: all 0.3s ease;
}

.social-icon:hover {
  background-color: #dc3545;
  color: #fff;
}

.product-tabs {
  margin-top: 3rem;
  padding-top: 2rem;
  border-top: 1px solid #eee;
}

.nav-tabs {
  border-bottom: 2px solid #eee;
}

.nav-tabs .nav-link {
  border: none;
  color: #6c757d;
  font-weight: 500;
  padding: 12px 20px;
  border-bottom: 2px solid transparent;
}

.nav-tabs .nav-link.active {
  color: #dc3545;
  border-bottom-color: #dc3545;
  background: none;
}

.tab-content {
  padding-top: 2rem;
}

.product-specs {
  display: grid;
  gap: 15px;
}

.product-spec {
  display: grid;
  grid-template-columns: 1fr 2fr;
  padding: 12px 0;
  border-bottom: 1px solid #eee;
}

.product-spec-label {
  font-weight: 600;
  color: #333;
}

.product-spec-value {
  color: #6c757d;
}

.review-card {
  padding: 20px;
  border: 1px solid #eee;
  border-radius: 8px;
  background-color: #f8f9fa;
}

.user-avatar {
  width: 45px;
  height: 45px;
  border-radius: 50%;
  background-color: #dc3545;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  font-size: 1.1rem;
}

.review-content .stars {
  font-size: 0.9rem;
}

.related-products {
  margin-top: 3rem;
  padding-top: 2rem;
  border-top: 1px solid #eee;
}

.related-product .product-image-container {
  position: relative;
  overflow: hidden;
  height: 250px;
}

.related-product .product-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.related-product:hover .product-image {
  transform: scale(1.05);
}

.btn-wishlist-home {
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background-color: #fff;
  color: #000;
  border: 2px solid #000;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  cursor: pointer;
}

.btn-wishlist-home:hover {
  background-color: #000;
  color: #fff;
}

.btn-wishlist-home.active {
  background-color: #dc3545;
  color: #fff;
  border-color: #dc3545;
}

.add-to-cart {
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background-color: #000;
  color: #fff;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  cursor: pointer;
}

.add-to-cart:hover {
  background-color: #333;
  transform: scale(1.1);
}

.add-to-cart:disabled {
  background-color: #6c757d;
  cursor: not-allowed;
  transform: none;
}

@media (max-width: 767.98px) {
  .thumbnails-container {
    flex-direction: row;
    overflow-x: auto;
    max-height: none;
    padding-bottom: 5px;
  }
  
  .thumbnail {
    flex-shrink: 0;
  }
  
  .col-2 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  
  .col-10 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  
  .main-image {
    height: 300px;
  }
  
  .action-buttons {
    flex-direction: column;
  }
  
  .btn-add-to-cart {
    max-width: none;
  }
}
</style>

<!-- Footer -->
<%- include("../partials/footer") %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/product-zoomer.js"></script>

<script>
console.log('🚀 Product Details Script Loading...');

// Pass server data to client
const serverWishlistIds = <%- JSON.stringify(userWishlistIds || []) %>;
const currentProductId = '<%= product._id %>';

console.log('Server wishlist IDs:', serverWishlistIds);
console.log('Current product ID:', currentProductId);

document.addEventListener('DOMContentLoaded', async function () {
    // Initialize cart state first
    if (window.cartState) {
        await window.cartState.init();
    }

    // Initialize global wishlist state
    if (window.globalState) {
        await window.globalState.init(serverWishlistIds);
        // Sync all wishlist buttons on page load
        window.globalState.syncAllWishlistButtons();
    }
    console.log(' DOM Content Loaded');
    
    // Get all elements
    const addToCartBtn = document.querySelector('.btn-add-to-cart');
    const wishlistBtn = document.querySelector('.btn-wishlist');
    const quantityInput = document.querySelector('#quantity');
    const cartCountElement = document.querySelector('.cart-count');
    const wishlistCountElement = document.querySelector('.wishlist-count');

    console.log('Elements found:', {
        addToCartBtn: !!addToCartBtn,
        wishlistBtn: !!wishlistBtn,
        quantityInput: !!quantityInput,
        cartCountElement: !!cartCountElement,
        wishlistCountElement: !!wishlistCountElement
    });

    // ================================
    // QUANTITY CONTROLS
    // ================================
    window.decrementQuantity = function () {
        let value = parseInt(quantityInput.value);
        if (value > 1) {
            quantityInput.value = value - 1;
        }
    };

    window.incrementQuantity = function () {
        let value = parseInt(quantityInput.value);
        if (value < parseInt(quantityInput.max)) {
            quantityInput.value = value + 1;
        }
    };

    // Validate quantity input
    if (quantityInput) {
        quantityInput.addEventListener('change', function () {
            let value = parseInt(this.value);
            if (isNaN(value) || value < 1) {
                value = 1;
                this.value = 1;
            }
            if (value > parseInt(this.max)) {
                value = parseInt(this.max);
                this.value = value;
            }
        });
    }

    // ================================
    // ADD TO CART FUNCTIONALITY
    // ================================
    if (addToCartBtn) {
        addToCartBtn.addEventListener('click', async function () {
            console.log(' Add to Cart clicked');
            
            if (this.disabled) {
                console.log(' Button is disabled');
                return;
            }

            const productId = this.dataset.productId;
            const quantity = parseInt(quantityInput.value);

            console.log('Adding to cart:', { productId, quantity });

            // Disable button temporarily
            this.disabled = true;
            const originalText = this.querySelector('span').textContent;
            this.querySelector('span').textContent = 'Adding...';

            try {
                const response = await fetch('/add-to-cart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity })
                });

                console.log('Cart response status:', response.status);
                const result = await response.json();
                console.log('Cart response:', result);

                if (response.ok && result.success) {
                    // Update button appearance
                    this.querySelector('span').textContent = 'Added!';
                    this.classList.add('btn-success');
                    this.classList.remove('btn-dark');
                    
                    // Update navbar cart count
                    updateNavbarCount('.cart-count', result.cartCount);
                    
                    // Update cart count using unified cart state system
                    if (window.cartState) {
                        window.cartState.updateCount();
                    } else if (typeof updateCartCount === 'function') {
                        updateCartCount();
                    }

                    // Show success notification
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'success',
                        title: result.message || 'Added to cart successfully!',
                        showConfirmButton: false,
                        timer: 1500
                    });

                    // Reset button after 2 seconds
                    setTimeout(() => {
                        this.querySelector('span').textContent = originalText;
                        this.classList.remove('btn-success');
                        this.classList.add('btn-dark');
                        this.disabled = false;
                    }, 2000);
                } else {
                //  const msg = typeof result.message === 'string' ? result.message : 'Failed to add to cart';
                //   throw new Error(msg);
                     throw new Error(result.message || 'Failed to add to cart');
                }
            } catch (error) {
                console.error(' Cart error:', error);
                
                // Reset button
                this.querySelector('span').textContent = originalText;
                this.disabled = false;
                
                // Show error notification
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: error.message || 'Error adding to cart',
                    showConfirmButton: false,
                    timer: 2000
                });
                
                // If unauthorized, redirect to login
                if (error.message && error.message.includes('log')) {
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 2000);
                }
            }
        });
    }

    // ================================
    // WISHLIST FUNCTIONALITY
    // ================================
    if (wishlistBtn) {
        wishlistBtn.addEventListener('click', async function () {
            console.log('❤️ Wishlist clicked');
            
            const productId = this.dataset.productId;
            console.log('Toggling wishlist for product:', productId);

            // Disable button temporarily
            this.disabled = true;

            try {
                const response = await fetch('/wishlist/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });

                console.log('Wishlist response status:', response.status);
                const result = await response.json();
                console.log('Wishlist response:', result);

                if (response.ok && result.success) {
                    // Update global wishlist state and sync all buttons across pages
                    if (result.action === 'added') {
                        window.globalState.addToWishlist(productId);
                    } else if (result.action === 'removed') {
                        window.globalState.removeFromWishlist(productId);
                    }

                    // Update navbar wishlist count
                    if (typeof updateWishlistCount === 'function') {
                        updateWishlistCount();
                    }
                    
                    // Show success notification
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'success',
                        title: result.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    throw new Error(result.message || 'Failed to update wishlist');
                }
            } catch (error) {
                console.error('❌ Wishlist error:', error);
                
                // Show error notification
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: error.message || 'Error updating wishlist',
                    showConfirmButton: false,
                    timer: 2000
                });
                
                // If unauthorized, redirect to login
                if (error.message && error.message.includes('log')) {
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 2000);
                }
            } finally {
                this.disabled = false;
            }
        });
    }

    // ================================
    // RELATED PRODUCTS FUNCTIONALITY
    // ================================
    
    // Related products - Add to Cart
    const relatedAddToCartButtons = document.querySelectorAll('.related-products .add-to-cart');
    console.log('Found related cart buttons:', relatedAddToCartButtons.length);
    
    relatedAddToCartButtons.forEach((button, index) => {
        button.addEventListener('click', async function (e) {
            e.preventDefault();
            console.log(`🛒 Related product ${index + 1} add to cart clicked`);
            
            if (this.disabled) return;

            const productId = this.dataset.productId;
            console.log('Adding related product to cart:', productId);

            // Disable button temporarily
            this.disabled = true;
            const originalHTML = this.innerHTML;
            this.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';

            try {
                const response = await fetch('/add-to-cart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity: 1 })
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    // Update cart count using unified cart state system
                    if (window.cartState) {
                        window.cartState.updateCount();
                    } else if (typeof updateCartCount === 'function') {
                        updateCartCount();
                    }
                    
                    // Show success notification
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'success',
                        title: result.message || 'Added to cart!',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    
                    // Reset button
                    this.innerHTML = '<i class="fas fa-check"></i>';
                    setTimeout(() => {
                        this.innerHTML = originalHTML;
                        this.disabled = false;
                    }, 1000);
                } else {
                    throw new Error(result.message || 'Failed to add to cart');
                }
            } catch (error) {
                console.error('❌ Related cart error:', error);
                
                // Reset button
                this.innerHTML = originalHTML;
                this.disabled = false;
                
                // Show error notification
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: error.message || 'Error adding to cart',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        });
    });

    // Related products - Wishlist
    const relatedWishlistButtons = document.querySelectorAll('.related-products .btn-wishlist-home');
    console.log('Found related wishlist buttons:', relatedWishlistButtons.length);
    
    relatedWishlistButtons.forEach((button, index) => {
        button.addEventListener('click', async function (e) {
            e.preventDefault();
            console.log(`❤️ Related product ${index + 1} wishlist clicked`);
            
            const productId = this.dataset.productId;
            console.log('Toggling related product wishlist:', productId);

            // Disable button temporarily
            this.disabled = true;

            try {
                const response = await fetch('/wishlist/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    // Update global wishlist state and sync all buttons across pages
                    if (result.action === 'added') {
                        window.globalState.addToWishlist(productId);
                    } else if (result.action === 'removed') {
                        window.globalState.removeFromWishlist(productId);
                    }

                    // Update navbar wishlist count
                    if (typeof updateWishlistCount === 'function') {
                        updateWishlistCount();
                    }
                    
                    // Show success notification
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'success',
                        title: result.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    throw new Error(result.message || 'Failed to update wishlist');
                }
            } catch (error) {
                console.error('❌ Related wishlist error:', error);
                
                // Show error notification
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: error.message || 'Error updating wishlist',
                    showConfirmButton: false,
                    timer: 1500
                });
            } finally {
                this.disabled = false;
            }
        });
    });

    // ================================
    // IMAGE ZOOMER INITIALIZATION
    // ================================
    setTimeout(() => {
        console.log('🔍 Initializing image zoomer...');
        
        const mainImage = document.getElementById('mainImage');
        const zoomContainer = document.getElementById('zoomContainer');
        
        if (mainImage && zoomContainer) {
            console.log('✅ Found zoom elements');
            
            // Try different zoomer function names (check your product-zoomer.js file)
            if (typeof magnify === 'function') {
                console.log('Using magnify function');
                magnify("mainImage", 3);
            } else if (typeof initImageZoom === 'function') {
                console.log('Using initImageZoom function');
                initImageZoom();
            } else if (typeof imageZoom === 'function') {
                console.log('Using imageZoom function');
                imageZoom("mainImage", "result");
            } else {
                console.log('⚠️ No zoomer function found');
                console.log('Available functions:', Object.keys(window).filter(k => k.toLowerCase().includes('zoom')));
            }
        } else {
            console.log('❌ Zoom elements not found');
        }
    }, 1000);
});

// ================================
// HELPER FUNCTIONS
// ================================

// Update navbar counts with animation
function updateNavbarCount(selector, count) {
    const element = document.querySelector(selector);
    if (element) {
        console.log(`Updating ${selector} to ${count}`);
        element.textContent = count || 0;
        element.dataset.count = count || 0;
        
        // Add bounce animation
        element.style.transform = 'scale(1.3)';
        element.style.transition = 'transform 0.2s ease';
        setTimeout(() => {
            element.style.transform = 'scale(1)';
        }, 200);
    } else {
        console.log(`❌ Element ${selector} not found in navbar`);
    }
}

// Image change function for thumbnails
window.changeImage = function(element, imageUrl) {
    console.log('🖼️ Changing image to:', imageUrl);
    
    // Remove active class from all thumbnails
    document.querySelectorAll('.thumbnail').forEach(thumb => {
        thumb.classList.remove('active');
    });
    
    // Add active class to clicked thumbnail
    element.classList.add('active');
    
    // Change main image
    const mainImage = document.getElementById('mainImage');
    if (mainImage) {
        mainImage.src = imageUrl;
    }
};

console.log('🎉 Product Details Script Loaded Successfully!');
</script>



</body>
</html>
